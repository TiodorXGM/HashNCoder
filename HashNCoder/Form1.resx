<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADE
        CAAAAk1TRnQBSQFMAgEBAwEAAQgBAAEIAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGRYAA1cBYUAAA1gBYgMqATEEAAMfASQDaAFzA3UBgAN1AYADdQGAA3UBgAN1
        AYADdQGAA3UBgAN1AYADdQGAA3UBgANuAXkDOwFEBAIwAAQCA0EBSgNcAWYDFAEYdAAE/0AABP8DdQGA
        BAADvAHENP8DOwFELAADLQE0A9kB3wj/A+4B8QNeAWkEAWwAA1gBYkAABP8DdQGABAAD5QHqNP8DXwFq
        JAADHAEhA5MBngPzAfYU/wO9AcUDOQFCaAADuwHDQAAE/wN1AYAIAAT/A3UBgCQABP8sAAPOAdUk/wNM
        AVZkAAT/QAAE/wN1AYAIAAT/A3UBgAQAAzgBQAPhAeUDWQFjBAADzwHWA2oBdQMFAQYEAAT/JAADIAEm
        A9IB2Sj/A+gB7ANDAUxgAAO8AcQMAANYAWIg/wO5AcIMAAT/A3UBgAgABP8DdQGABAAD4QHmA8wB0wMJ
        AQsEAANqAXUE/wNcAWYEAAT/JAADpgGwNP8DKgExXAADVwFhDAADdQGAJP8MAAT/A3UBgAgABP8DdQGA
        BAADowGtA+QB6QMxATgEAAOjAa0D5AHpAzEBOAQABP8D4QHmAwIBAxgAAzQBPAP1Afc0/wOKAZVcAAT/
        DAADdQGABP8DlgGhAzkBQQT/AzsBQwOWAaAM/wwABP8DdQGACAAE/wN1AYAEAAMJAQsDxQHMA1gBYgQA
        A8AByAMTARYIAAj/AxkBHQQAAxQBGAwAAxoBHwO8AcQ4/wPcAeEDNgE+WAAD7gHxBP8DVwFhA7wBxAj/
        AxkBHhAAAzUBPRj/A2YBcQgAA64BtwPHAc4DdQGAA3UBgAN1AYADdQGAA3UBgAN1AYADdQGAA3UBgAOT
        AZ4D4gHnA8AByAPhAeYDvgHHA/UB9wNDAUwIAAM/AUgD9QH3BP8DpAGuA6oBtAT/A4UBkAP8Af0DgAGL
        A1kBYwOhAasD6QHtA2QBbwNmAXED3gHjBP8D+QH7A4UBkGgAA3UBgAT/A94B4wQAA4MBjgO9AcYDDQEP
        A/0B/gj/HAADBQEGA68BuCD/A+gB7AM/AUgEAANpAXQDqgG0A6IBrAP3AfkDEQEUBAADVAFeCP8D1AHa
        AwwBDgMcASEDJwEtBP8DOQFBBP8D6gHuA8cBzgOuAbcDawF2A2sBdgj/A7EBu1gAA2YBcQN1AYADKgEx
        A1gBYgO2Ab8E/wPHAc4DDQEQAysBMgN0AX8DBwEIA1kBZAPIAc8E/wN1AYADdQGAA3UBgAN1AYADKgEx
        GAADyAHPA98B5AMxATkIAANZAWQD3AHhA5gBowNXAWEIAAN1AYEE/wNdAWcEAANXAWEM/wM4AUADnQGn
        A1kBYwT/Ay8BNwNrAXYD9gH4BP8DnQGnAyQBKgOyAbwI/wO4AcFYAAj/A1gBYgO9AcUI/wOSAZ0UAAOT
        AZ4U/wN1AYAYAAMbASADzgHVA/gB+ggAA+EB5gj/A8MBywgAA/wB/QOhAasDDQEQBAADVwFhDP8DXQFo
        AyMBKQOWAaEE/wM2AT4I/wOpAbMDPQFGEP8DuAHBWAAD3QHiDAADdQGADP8DlgGgBP8DxQHNA5cBogj/
        DAAE/wN1AYAcAAOFAZAD4QHlBAADvAHEEP8DVwFhBAAD7wHyAxsBIAgAA1cBYQz/A5cBogMGAQcD1QHb
        BP8DNQE9A08BWQORAZwD0gHZAzwBRQMnAS0DvQHFCP8DuAHBaAADdQGAJP8MAAT/A3UBgBgAAxsBIAPO
        AdUD+AH6CAAD4QHmCP8DwwHLCAAD/AH9A6EBqwMNARAEAANXAWFA/wO4AcFYAAPcAeEMAAMqATEDdQGA
        A3UBgAN1AYADdQGAA3UBgAN1AYADdQGAA3UBgANYAWIMAAT/A3UBgBgAA8gBzwPfAeQDMQE5CAADWQFk
        A90B4gOZAaQDWAFiCAADdQGBBP8DXQFnBAADVwFhQP8DuAHBWAAE/0AABP8DdQGAGAADIgEoA/kB+wNS
        AVwDsQG6AyIBKBAAA2kBdAOqAbQDogGsA/gB+gMRARQEAANXAWFA/wO4AcFYAANYAWJAAAT/A3UBgBwA
        A5QBnwP6AfwDxQHMA/gB+gOXAaIEAAM3AT8DwAHIA+EB5gO+AccD9QH3A0QBTQgAA1MBXUD/A7EBu1gA
        A7sBw0AABP8DdQGAHAADCQELAxYBGgQAAzMBOwP3AfkEAANvAXoE/wMZAR0EAAMUARgMAAMOAREDcwF+
        A88B1gPUAdoD9gH4JP8D4QHmA8gBzwOlAa8DHwEkWAAD3QHiQAAD3QHiA2YBcSgAAwYBBwPwAfMI/wPi
        AecDAgEDIAADAgEDAxIBFQMoAS8DVAFeA5QBnwPkAekD9gH4A7IBvANkAW8DNgE+AxcBGwMHAQj/AKEA
        AUIBTQE+BwABPgMAASgDAAFQAwABFAMAAQEBAAEBBQAB8BcAA/8BAAG/Af8ByAEAAQ8B/wEPAfAEAAG/
        Af8ByAEAAQ8B/gEDAfAEAAG/Af8ByAEAAQ8B+AEBAfAEAAG/Af8BzAH/Ab8B+AEAAfAEAAG/Af8BzAGI
        Ab8B4AEAAXAEAAG4AQEBzAGIAb8B4AEAATAEAAG4AQEBzAGIAY8BwAEAATAEAAG4AQEBzAGJAYsBgAEA
        ARAEAAGAAfABDAEAAQEBgAEAARAEAAH4AYEB/AEAASABgAEAARAEAAGAAQABDwHGARgBgAEAARAEAAGA
        AfgBDwHGARgBgAEAARAEAAG4AQEBzwHkAQkBgAEAARAEAAH4AQEBzwHGARgBgAEAARAEAAG4AQEBzwHG
        ARgBgAEAARAEAAG/Af8BzwHBAeABgAEAARAEAAG/Af8BzwHgAYEBgAEAARAEAAG/Af8BzwHkAYsBgAEA
        ARAEAAG/Af8BzwH8AQ8B8AEAAfAEAAf/AfAEAAs=
</value>
  </data>
</root>