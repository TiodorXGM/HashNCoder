<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADC
        CAAAAk1TRnQBSQFMAgEBAwEAARgBAAEYAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGRYAAzsBYUAAAzsBYgMiATEEAAMaASQDQwFzA0kBgANJAYADSQGAA0kBgANJ
        AYADSQGAA0kBgANJAYADSQGAA0kBgANGAXkDLQFEBAIwAAQCAzABSgM9AWYDEgEYdAAE/0AABP8DSQGA
        BAADfgHENP8DLQFELAADJAE0A6YB3wj/A9QB8QM/AWkEAWwAAzsBYkAABP8DSQGABAADvgHqNP8DPwFq
        JAADGAEhA1kBngPfAfYU/wN9AcUDKwFCaAADfAHDQAAE/wNJAYAIAAT/A0kBgCQABP8sAAOWAdUk/wM2
        AVZkAAT/QAAE/wNJAYAIAAT/A0kBgAQAAyoBQAO1AeUDPAFjBAADmAHWA0QBdQMFAQYEAAT/JAADGwEm
        A5sB2Sj/A8UB7AMxAUxgAAN+AcQMAAM7AWIg/wN6AcIMAAT/A0kBgAgABP8DSQGABAADtgHmA5IB0wMJ
        AQsEAANEAXUE/wM9AWYEAAT/JAADaAGwNP8DIgExXAADOwFhDAADSQGAJP8MAAT/A0kBgAgABP8DSQGA
        BAADZQGtA7sB6QMmATgEAANlAa0DuwHpAyYBOAQABP8DtgHmAwIBAxgAAygBPAPkAfc0/wNVAZVcAAT/
        DAADSQGABP8DXQGhAysBQQT/AywBQwNcAaAM/wwABP8DSQGACAAE/wNJAYAEAAMJAQsDiAHMAzsBYgQA
        A4QByAMRARYIAAj/AxYBHQQAAxIBGAwAAxcBHwN+AcQ4/wOrAeEDKQE+WAAD1AHxBP8DOwFhA34BxAj/
        AxYBHhAAAykBPRj/A0IBcQgAA28BtwOMAc4DSQGAA0kBgANJAYADSQGAA0kBgANJAYADSQGAA0kBgANZ
        AZ4DugHnA4QByAO2AeYDgAHHA+QB9wMxAUwIAAMvAUgD5AH3BP8DZgGuA2sBtAT/A1IBkAP2Af0DTwGL
        AzwBYwNlAasDyQHtA0EBbwNCAXEDrwHjBP8D7QH7A1IBkGgAA0kBgAT/A68B4wQAA1EBjgN/AcYDDAEP
        A/kB/gj/HAADBQEGA3ABuCD/A8UB7AMvAUgEAANEAXQDawG0A2UBrAPnAfkDDwEUBAADOQFeCP8DngHa
        AwsBDgMYASEDIAEtBP8DKwFBBP8DygHuA4wBzgNvAbcDRAF2A0QBdgj/A3IBu1gAA0IBcQNJAYADIgEx
        AzsBYgN3Ab8E/wOMAc4DDAEQAyMBMgNJAX8DBgEIAzwBZAOMAc8E/wNJAYADSQGAA0kBgANJAYADIgEx
        GAADjAHPA7AB5AMnATkIAAM8AWQDqwHhA14BowM7AWEIAANJAYEE/wM+AWcEAAM7AWEM/wMqAUADYQGn
        AzwBYwT/AyUBNwNEAXYD5gH4BP8DYQGnAx4BKgNyAbwI/wN5AcFYAAj/AzsBYgN9AcUI/wNaAZ0UAANZ
        AZ4U/wNJAYAYAAMYASADlgHVA+oB+ggAA7YB5gj/A4YBywgAA/YB/QNlAasDDAEQBAADOwFhDP8DPgFo
        Ax0BKQNdAaEE/wMpAT4I/wNrAbMDLgFGEP8DeQHBWAADrwHiDAADSQGADP8DXAGgBP8DiQHNA10Bogj/
        DAAE/wNJAYAcAANSAZADtQHlBAADfgHEEP8DOwFhBAAD1gHyAxgBIAgAAzsBYQz/A10BogMGAQcDoAHb
        BP8DKQE9AzcEWQGcA5sB2QMtAUUDIAEtA30BxQj/A3kBwWgAA0kBgCT/DAAE/wNJAYAYAAMYASADlgHV
        A+oB+ggAA7YB5gj/A4YBywgAA/YB/QNlAasDDAEQBAADOwFhQP8DeQHBWAADqwHhDAADIgExA0kBgANJ
        AYADSQGAA0kBgANJAYADSQGAA0kBgANJAYADOwFiDAAE/wNJAYAYAAOMAc8DsAHkAycBOQgAAzwBZAOv
        AeIDXgGkAzsBYggAA0kBgQT/Az4BZwQAAzsBYUD/A3kBwVgABP9AAAT/A0kBgBgAAx0BKAPtAfsDOQFc
        A3EBugMdASgQAANEAXQDawG0A2UBrAPqAfoDDwEUBAADOwFhQP8DeQHBWAADOwFiQAAE/wNJAYAcAANb
        AZ8D8AH8A4gBzAPqAfoDXQGiBAADKgE/A4QByAO2AeYDgAHHA+QB9wMxAU0IAAM5AV1A/wNyAbtYAAN8
        AcNAAAT/A0kBgBwAAwkBCwMTARoEAAMoATsD5wH5BAADRgF6BP8DFgEdBAADEgEYDAADDQERA0kBfgOY
        AdYDngHaA+YB+CT/A7YB5gOMAc8DZwGvAxoBJFgAA68B4kAAA68B4gNCAXEoAAMGAQcD1wHzCP8DugHn
        AwIBAyAAAwIBAwMQARUDIQEvAzkBXgNbAZ8DuwHpA+YB+ANyAbwDQQFvAykBPgMUARsDBgEI/wChAAFC
        AU0BPgcAAT4DAAEoAwABUAMAARQDAAEBAQABAQUAAfAXAAP/AQABvwH/AcgBAAEPAf8BDwHwBAABvwH/
        AcgBAAEPAf4BAwHwBAABvwH/AcgBAAEPAfgBAQHwBAABvwH/AcwB/wG/AfgBAAHwBAABvwH/AcwBiAG/
        AeABAAFwBAABuAEBAcwBiAG/AeABAAEwBAABuAEBAcwBiAGPAcABAAEwBAABuAEBAcwBiQGLAYABAAEQ
        BAABgAHwAQwBAAEBAYABAAEQBAAB+AGBAfwBAAEgAYABAAEQBAABgAEAAQ8BxgEYAYABAAEQBAABgAH4
        AQ8BxgEYAYABAAEQBAABuAEBAc8B5AEJAYABAAEQBAAB+AEBAc8BxgEYAYABAAEQBAABuAEBAc8BxgEY
        AYABAAEQBAABvwH/Ac8BwQHgAYABAAEQBAABvwH/Ac8B4AGBAYABAAEQBAABvwH/Ac8B5AGLAYABAAEQ
        BAABvwH/Ac8B/AEPAfABAAHwBAAH/wHwBAAL
</value>
  </data>
</root>