<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADA
        CAAAAk1TRnQBSQFMAgEBAwEAASABAAEgAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGRYAAzoBYUAAAzsBYgMiATEEAAMaASQDQgFzA0cBgANHAYADRwGAA0cBgANH
        AYADRwGAA0cBgANHAYADRwGAA0cBgANEAXkDLQFEBAIwAAQCAzABSgM8AWYDEgEYdAAE/0AABP8DRwGA
        BAADcAHENP8DLQFELAADJAE0A5UB3wj/A8cB8QM+AWkEAWwAAzsBYkAABP8DRwGABAADrgHqNP8DPgFq
        JAADGAEhA1QBngPVAfYU/wNwAcUDKwFCaAADbwHDQAAE/wNHAYAIAAT/A0cBgCQABP8sAAOFAdUk/wM1
        AVZkAAT/QAAE/wNHAYAIAAT/A0cBgAQAAyoBQAOmAeUDOwFjBAADiAHWA0MBdQMFAQYEAAT/JAADGwEm
        A4sB2Sj/A7YB7AMxAUxgAANwAcQMAAM7AWIg/wNtAcIMAAT/A0cBgAgABP8DRwGABAADpgHmA4IB0wMJ
        AQsEAANDAXUE/wM8AWYEAAT/JAADXwGwNP8DIgExXAADOgFhDAADRwGAJP8MAAT/A0cBgAgABP8DRwGA
        BAADXQStAekDJgE4BAADXQStAekDJgE4BAAE/wOmAeYDAgEDGAADKAE8A90B9zT/A1EBlVwABP8MAANH
        AYAE/wNXAaEDKwFBBP8DLAFDA1YBoAz/DAAE/wNHAYAIAAT/A0cBgAQAAwkBCwN5AcwDOwFiBAADdgHI
        AxEBFggACP8DFgEdBAADEgEYDAADFwEfA3ABxDj/A5sB4QMpAT5YAAPHAfEE/wM6AWEDcAHECP8DFgEe
        EAADKQE9GP8DQQFxCAADZAG3A3wBzgNHAYADRwGAA0cBgANHAYADRwGAA0cBgANHAYADRwGAA1QBngOq
        AecDdgHIA6YB5gNyAccD3QH3AzEBTAgAAy4BSAPdAfcE/wNdAa4DYQG0BP8DTgGQA/MB/QNMAYsDOwFj
        A10BqwO8Ae0DQAFvA0EBcQOfAeME/wPnAfsDTgGQaAADRwGABP8DnwHjBAADTQGOA3EBxgMMAQ8D9wH+
        CP8cAAMFAQYDZQG4IP8DtgHsAy4BSAQAA0IBdANhAbQDXAGsA+IB+QMPARQEAAM5AV4I/wONAdoDCwEO
        AxgBIQMgAS0E/wMrAUEE/wO9Ae4DfAHOA2QBtwNDAXYDQwF2CP8DZwG7WAADQQFxA0cBgAMiATEDOwFi
        A2oBvwT/A3wBzgMMARADIwEyA0cBfwMGAQgDPAFkA30BzwT/A0cBgANHAYADRwGAA0cBgAMiATEYAAN9
        Ac8DnwHkAycBOQgAAzwBZAObAeEDVgGjAzoBYQgAA0cBgQT/Az0BZwQAAzoBYQz/AyoBQANaAacDOwFj
        BP8DJQE3A0MBdgPgAfgE/wNaAacDHgEqA2YBvAj/A2wBwVgACP8DOwFiA3ABxQj/A1QBnRQAA1QBnhT/
        A0cBgBgAAxgBIAOFAdUD4wH6CAADpgHmCP8DdwHLCAAD8wH9A10BqwMMARAEAAM6AWEM/wM9AWgDHQEp
        A1cBoQT/AykBPgj/A2ABswMuAUYQ/wNsAcFYAAOeAeIMAANHAYAM/wNWAaAE/wN5Ac0DVgGiCP8MAAT/
        A0cBgBwAA04BkAOmAeUEAANwAcQQ/wM6AWEEAAPKAfIDGAEgCAADOgFhDP8DVgGiAwYBBwOPAdsE/wMp
        AT0DNgFZA1MBnAOLAdkDLQFFAyABLQNwAcUI/wNsAcFoAANHAYAk/wwABP8DRwGAGAADGAEgA4UB1QPj
        AfoIAAOmAeYI/wN3AcsIAAPzAf0DXQGrAwwBEAQAAzoBYUD/A2wBwVgAA5sB4QwAAyIBMQNHAYADRwGA
        A0cBgANHAYADRwGAA0cBgANHAYADRwGAAzsBYgwABP8DRwGAGAADfQHPA58B5AMnATkIAAM8AWQDngHi
        A1cBpAM7AWIIAANHAYEE/wM9AWcEAAM6AWFA/wNsAcFYAAT/QAAE/wNHAYAYAAMdASgD5wH7AzgBXANl
        AboDHQEoEAADQgF0A2EBtANcAawD4wH6Aw8BFAQAAzoBYUD/A2wBwVgAAzsBYkAABP8DRwGAHAADVQGf
        A+sB/AN5AcwD4wH6A1YBogQAAyoBPwN2AcgDpgHmA3IBxwPdAfcDMQFNCAADOQFdQP8DZwG7WAADbwHD
        QAAE/wNHAYAcAAMJAQsDEwEaBAADKAE7A+IB+QQAA0QBegT/AxYBHQQAAxIBGAwAAw0BEQNHAX4DiAHW
        A40B2gPgAfgk/wOmAeYDfQHPA14BrwMaASRYAAOeAeJAAAOeAeIDQQFxKAADBgEHA80B8wj/A6oB5wMC
        AQMgAAMCAQMDEAEVAyEBLwM5AV4DVQGfA60B6QPgAfgDZgG8A0ABbwMpAT4DFAEbAwYBCP8AoQABQgFN
        AT4HAAE+AwABKAMAAVADAAEUAwABAQEAAQEFAAHwFwAD/wEAAb8B/wHIAQABDwH/AQ8B8AQAAb8B/wHI
        AQABDwH+AQMB8AQAAb8B/wHIAQABDwH4AQEB8AQAAb8B/wHMAf8BvwH4AQAB8AQAAb8B/wHMAYgBvwHg
        AQABcAQAAbgBAQHMAYgBvwHgAQABMAQAAbgBAQHMAYgBjwHAAQABMAQAAbgBAQHMAYkBiwGAAQABEAQA
        AYAB8AEMAQABAQGAAQABEAQAAfgBgQH8AQABIAGAAQABEAQAAYABAAEPAcYBGAGAAQABEAQAAYAB+AEP
        AcYBGAGAAQABEAQAAbgBAQHPAeQBCQGAAQABEAQAAfgBAQHPAcYBGAGAAQABEAQAAbgBAQHPAcYBGAGA
        AQABEAQAAb8B/wHPAcEB4AGAAQABEAQAAb8B/wHPAeABgQGAAQABEAQAAb8B/wHPAeQBiwGAAQABEAQA
        Ab8B/wHPAfwBDwHwAQAB8AQAB/8B8AQACw==
</value>
  </data>
</root>