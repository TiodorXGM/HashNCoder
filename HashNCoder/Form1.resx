<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADE
        CAAAAk1TRnQBSQFMAgEBAwEAASgBAAEoAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGRYAAzoBYUAAAzsBYgMiATEEAAMaASQDQgFzA0cBgANHAYADRwGAA0cBgANH
        AYADRwGAA0cBgANHAYADRwGAA0cBgANEAXkDLQFEBAIwAAQCAzABSgM8AWYDEgEYdAAE/0AABP8DRwGA
        BAADXAHENP8DLQFELAADJAE0A20B3wj/A54B8QM+AWkEAWwAAzsBYkAABP8DRwGABAADgQHqNP8DPgFq
        JAADGAEhA1EBngOxAfYU/wNdAcUDKwFCaAADXQHDQAAE/wNHAYAIAAT/A0cBgCQABP8sAANmAdUk/wM1
        AVZkAAT/QAAE/wNHAYAIAAT/A0cBgAQAAyoBQAN7AeUDOwFjBAADZgHWA0MBdQMFAQYEAAT/JAADGwEm
        A2YB2Sj/A4gB7AMxAUxgAANcAcQMAAM7AWIg/wNcAcIMAAT/A0cBgAgABP8DRwGABAADfAHmA2MB0wMJ
        AQsEAANDAXUE/wM8AWYEAAT/JAADVgGwNP8DIgExXAADOgFhDAADRwGAJP8MAAT/A0cBgAgABP8DRwGA
        BAADVQGtA4AB6QMmATgEAANVAa0DgAHpAyYBOAQABP8DfAHmAwIBAxgAAygBPAO+Afc0/wNOAZVcAAT/
        DAADRwGABP8DUgGhAysBQQT/AywBQwNSAaAM/wwABP8DRwGACAAE/wNHAYAEAAMJAQsDYAHMAzsBYgQA
        A18ByAMRARYIAAj/AxYBHQQAAxIBGAwAAxcBHwNcAcQ4/wNxAeEDKQE+WAADngHxBP8DOgFhA1wBxAj/
        AxYBHhAAAykBPRj/A0EBcQgAA1oBtwNiAc4DRwGAA0cBgANHAYADRwGAA0cBgANHAYADRwGAA0cBgANR
        AZ4DfQHnA18ByAN8AeYDXQHHA74B9wMxAUwIAAMuAUgDvgH3BP8DVgGuA1cBtAT/A0wBkAPkAf0DSwGL
        AzsBYwNWAasDjgHtA0ABbwNBAXEDdgHjBP8D0wH7A0wBkGgAA0cBgAT/A3YB4wQAA0wBjgNeAcYDDAEP
        A+0B/gj/HAADBQEGA1gBuCD/A4gB7AMuAUgEAANCAXQDVwG0A1UBrAPHAfkDDwEUBAADOQFeCP8DaQHa
        AwsBDgMYASEDIAEtBP8DKwFBBP8DjgHuA2IBzgNaAbcDQwF2A0MBdgj/A1kBu1gAA0EBcQNHAYADIgEx
        AzsBYgNaAb8E/wNiAc4DDAEQAyMBMgNGAX8DBgEIAzwBZANjAc8E/wNHAYADRwGAA0cBgANHAYADIgEx
        GAADYwHPA3QB5AMnATkIAAM8AWQDcQHhA1IBowM6AWEIAANHAYEE/wM9AWcEAAM6AWEM/wMqAUADUwGn
        AzsBYwT/AyUBNwNDAXYDwQH4BP8DUwGnAx4BKgNZAbwI/wNcAcFYAAj/AzsBYgNdAcUI/wNRAZ0UAANR
        AZ4U/wNHAYAYAAMYASADZgHVA88B+ggAA3wB5gj/A2ABywgAA+QB/QNWAasDDAEQBAADOgFhDP8DPQFo
        Ax0BKQNSAaEE/wMpAT4I/wNYAbMDLgFGEP8DXAHBWAADcwHiDAADRwGADP8DUgGgBP8DYAHNA1MBogj/
        DAAE/wNHAYAcAANMAZADewHlBAADXAHEEP8DOgFhBAADoAHyAxgBIAgAAzoBYQz/A1MBogMGAQcDawHb
        BP8DKQE9AzYBWQNRAZwDZgHZAy0BRQMgAS0DXQHFCP8DXAHBaAADRwGAJP8MAAT/A0cBgBgAAxgBIANm
        AdUDzwH6CAADfAHmCP8DYAHLCAAD5AH9A1YBqwMMARAEAAM6AWFA/wNcAcFYAANxAeEMAAMiATEDRwGA
        A0cBgANHAYADRwGAA0cBgANHAYADRwGAA0cBgAM7AWIMAAT/A0cBgBgAA2MBzwN0AeQDJwE5CAADPAFk
        A3MB4gNSAaQDOwFiCAADRwGBBP8DPQFnBAADOgFhQP8DXAHBWAAE/0AABP8DRwGAGAADHQEoA9MB+wM4
        AVwDWgG6Ax0BKBAAA0IBdANXAbQDVQGsA88B+gMPARQEAAM6AWFA/wNcAcFYAAM7AWJAAAT/A0cBgBwA
        A1EBnwPSAfwDYAHMA88B+gNTAaIEAAMqAT8DXwHIA3wB5gNdAccDvgH3AzEBTQgAAzkBXUD/A1kBu1gA
        A10Bw0AABP8DRwGAHAADCQELAxMBGgQAAygBOwPHAfkEAANEAXoE/wMWAR0EAAMSARgMAAMNAREDRgF+
        A2YB1gNpAdoDwQH4JP8DfAHmA2MBzwNVAa8DGgEkWAADcwHiQAADcwHiA0EBcSgAAwYBBwOlAfMI/wN9
        AecDAgEDIAADAgEDAxABFQMhAS8DOQFeA1EBnwOAAekDwQH4A1kBvANAAW8DKQE+AxQBGwMGAQj/AKEA
        AUIBTQE+BwABPgMAASgDAAFQAwABFAMAAQEBAAEBBQAB8BcAA/8BAAG/Af8ByAEAAQ8B/wEPAfAEAAG/
        Af8ByAEAAQ8B/gEDAfAEAAG/Af8ByAEAAQ8B+AEBAfAEAAG/Af8BzAH/Ab8B+AEAAfAEAAG/Af8BzAGI
        Ab8B4AEAAXAEAAG4AQEBzAGIAb8B4AEAATAEAAG4AQEBzAGIAY8BwAEAATAEAAG4AQEBzAGJAYsBgAEA
        ARAEAAGAAfABDAEAAQEBgAEAARAEAAH4AYEB/AEAASABgAEAARAEAAGAAQABDwHGARgBgAEAARAEAAGA
        AfgBDwHGARgBgAEAARAEAAG4AQEBzwHkAQkBgAEAARAEAAH4AQEBzwHGARgBgAEAARAEAAG4AQEBzwHG
        ARgBgAEAARAEAAG/Af8BzwHBAeABgAEAARAEAAG/Af8BzwHgAYEBgAEAARAEAAG/Af8BzwHkAYsBgAEA
        ARAEAAG/Af8BzwH8AQ8B8AEAAfAEAAf/AfAEAAs=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>31</value>
  </metadata>
</root>