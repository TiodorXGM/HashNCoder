<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADC
        CAAAAk1TRnQBSQFMAgEBAwEAARABAAEQAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGRYAAzoBYUAAAzsBYgMiATEEAAMaASQDQgFzA0cBgANHAYADRwGAA0cBgANH
        AYADRwGAA0cBgANHAYADRwGAA0cBgANEAXkDLQFEBAIwAAQCAzABSgM8AWYDEgEYdAAE/0AABP8DRwGA
        BAADYgHENP8DLQFELAADJAE0A38B3wj/A7QB8QM+AWkEAWwAAzsBYkAABP8DRwGABAADmAHqNP8DPgFq
        JAADGAEhA1EBngPGAfYU/wNjAcUDKwFCaAADYwHDQAAE/wNHAYAIAAT/A0cBgCQABP8sAANxAdUk/wM1
        AVZkAAT/QAAE/wNHAYAIAAT/A0cBgAQAAyoBQAOPAeUDOwFjBAADcgHWA0MBdQMFAQYEAAT/JAADGwEm
        A3UB2Sj/A58B7AMxAUxgAANiAcQMAAM7AWIg/wNhAcIMAAT/A0cBgAgABP8DRwGABAADkAHmA28B0wMJ
        AQsEAANDAXUE/wM8AWYEAAT/JAADVwGwNP8DIgExXAADOgFhDAADRwGAJP8MAAT/A0cBgAgABP8DRwGA
        BAADVwGtA5UB6QMmATgEAANXAa0DlQHpAyYBOAQABP8DkAHmAwIBAxgAAygBPAPNAfc0/wNOAZVcAAT/
        DAADRwGABP8DUgGhAysBQQT/AywBQwNSAaAM/wwABP8DRwGACAAE/wNHAYAEAAMJAQsDaQHMAzsBYgQA
        A2cByAMRARYIAAj/AxYBHQQAAxIBGAwAAxcBHwNiAcQ4/wOEAeEDKQE+WAADtAHxBP8DOgFhA2IBxAj/
        AxYBHhAAAykBPRj/A0EBcQgAA1sBtwNqAc4DRwGAA0cBgANHAYADRwGAA0cBgANHAYADRwGAA0cBgANR
        AZ4DkgHnA2cByAOQAeYDZAHHA80B9wMxAUwIAAMuAUgDzQH3BP8DVwGuA1oBtAT/A0wBkAPtAf0DSwGL
        AzsBYwNXAasDpwHtA0ABbwNBAXEDiQHjBP8D3AH7A0wBkGgAA0cBgAT/A4kB4wQAA0wBjgNkAcYDDAEP
        A/MB/gj/HAADBQEGA1wBuCD/A58B7AMuAUgEAANCAXQDWgG0A1YBrAPYAfkDDwEUBAADOQFeCP8DeQHa
        AwsBDgMYASEDIAEtBP8DKwFBBP8DpQHuA2oBzgNbAbcDQwF2A0MBdgj/A1wBu1gAA0EBcQNHAYADIgEx
        AzsBYgNeAb8E/wNqAc4DDAEQAyMBMgNGAX8DBgEIAzwBZANsAc8E/wNHAYADRwGAA0cBgANHAYADIgEx
        GAADbAHPA4kB5AMnATkIAAM8AWQDhAHhA1MBowM6AWEIAANHAYEE/wM9AWcEAAM6AWEM/wMqAUADVAGn
        AzsBYwT/AyUBNwNDAXYD0wH4BP8DVAGnAx4BKgNbAbwI/wNgAcFYAAj/AzsBYgNjAcUI/wNRAZ0UAANR
        AZ4U/wNHAYAYAAMYASADcQHVA9sB+ggAA5AB5gj/A2gBywgAA+0B/QNXAasDDAEQBAADOgFhDP8DPQFo
        Ax0BKQNSAaEE/wMpAT4I/wNZAbMDLgFGEP8DYAHBWAADhwHiDAADRwGADP8DUgGgBP8DaAHNA1MBogj/
        DAAE/wNHAYAcAANMAZADjwHlBAADYgHEEP8DOgFhBAADtwHyAxgBIAgAAzoBYQz/A1MBogMGAQcDewHb
        BP8DKQE9AzYBWQNRAZwDdQHZAy0BRQMgAS0DYwHFCP8DYAHBaAADRwGAJP8MAAT/A0cBgBgAAxgBIANx
        AdUD2wH6CAADkAHmCP8DaAHLCAAD7QH9A1cBqwMMARAEAAM6AWFA/wNgAcFYAAOEAeEMAAMiATEDRwGA
        A0cBgANHAYADRwGAA0cBgANHAYADRwGAA0cBgAM7AWIMAAT/A0cBgBgAA2wBzwOJAeQDJwE5CAADPAFk
        A4cB4gNSAaQDOwFiCAADRwGBBP8DPQFnBAADOgFhQP8DYAHBWAAE/0AABP8DRwGAGAADHQEoA9wB+wM4
        BFwBugMdASgQAANCAXQDWgG0A1YBrAPbAfoDDwEUBAADOgFhQP8DYAHBWAADOwFiQAAE/wNHAYAcAANR
        AZ8D4QH8A2kBzAPbAfoDUwGiBAADKgE/A2cByAOQAeYDZAHHA80B9wMxAU0IAAM5AV1A/wNcAbtYAANj
        AcNAAAT/A0cBgBwAAwkBCwMTARoEAAMoATsD2AH5BAADRAF6BP8DFgEdBAADEgEYDAADDQERA0YBfgNy
        AdYDeQHaA9MB+CT/A5AB5gNsAc8DWAGvAxoBJFgAA4cB4kAAA4cB4gNBAXEoAAMGAQcDugHzCP8DkgHn
        AwIBAyAAAwIBAwMQARUDIQEvAzkBXgNRAZ8DlQHpA9MB+ANbAbwDQAFvAykBPgMUARsDBgEI/wChAAFC
        AU0BPgcAAT4DAAEoAwABUAMAARQDAAEBAQABAQUAAfAXAAP/AQABvwH/AcgBAAEPAf8BDwHwBAABvwH/
        AcgBAAEPAf4BAwHwBAABvwH/AcgBAAEPAfgBAQHwBAABvwH/AcwB/wG/AfgBAAHwBAABvwH/AcwBiAG/
        AeABAAFwBAABuAEBAcwBiAG/AeABAAEwBAABuAEBAcwBiAGPAcABAAEwBAABuAEBAcwBiQGLAYABAAEQ
        BAABgAHwAQwBAAEBAYABAAEQBAAB+AGBAfwBAAEgAYABAAEQBAABgAEAAQ8BxgEYAYABAAEQBAABgAH4
        AQ8BxgEYAYABAAEQBAABuAEBAc8B5AEJAYABAAEQBAAB+AEBAc8BxgEYAYABAAEQBAABuAEBAc8BxgEY
        AYABAAEQBAABvwH/Ac8BwQHgAYABAAEQBAABvwH/Ac8B4AGBAYABAAEQBAABvwH/Ac8B5AGLAYABAAEQ
        BAABvwH/Ac8B/AEPAfABAAHwBAAH/wHwBAAL
</value>
  </data>
</root>